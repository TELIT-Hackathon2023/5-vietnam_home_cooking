extensions:
    apiRouter: Contributte\ApiRouter\DI\ApiRouterExtension
    console: Contributte\Console\DI\ConsoleExtension(%consoleMode%)
    apiDocu: Contributte\ApiDocu\DI\ApiDocuExtension


apiDocu:
	apiDir: "%appDir%/../www/apiDocs"

parameters:


application:
	errorPresenter: Error
	scanDirs: false
	mapping:
		*: App\Controllers\*Controller

includes:
    - nettrine.neon

session:
	expiration: 14 days

services:
	- App\Http\ApiResponseFormatter
	- App\Routing\RouterFactory

	router: @App\Routing\RouterFactory::create

	# Api endpoints
	#
	- App\Controllers\LoginController
	- App\Controllers\RegisterController
	- App\Controllers\RegisterEmployeeCarController
	- App\Controllers\GetEmployeeCarsController
	- App\Controllers\GetFreeSpotsController
	- App\Controllers\GetAllSpotsController
	SessionRepository:
	    type: App\Model\Services\EmployeeRepository
	    factory: @Doctrine\ORM\EntityManagerInterface::getRepository('App\Model\Entity\Employee')
	EmployeeCarRepository:
	    type: App\Model\Services\EmployeeCarRepository
	    factory: @Doctrine\ORM\EntityManagerInterface::getRepository('App\Model\Entity\EmployeeCar')
	ParkingSpotRepository:
	    type: App\Model\Services\ParkingSpotRepository
	    factory: @Doctrine\ORM\EntityManagerInterface::getRepository('App\Model\Entity\ParkingSpot')